x = int(input())

d = [0]*30001

for i in range(2,x+1):
    d[i] = d[i-1] +1
    if d[i]%2 == 0:
        d[i] = min(d[i], d[i//2]+1)

    if d[i]%3 == 0:
        d[i] = min(d[i], d[i//3]+1)

    if d[i]%5 == 0:
        d[i] = min(d[i], d[i//5]+1)

print(d[x])


"""
점화식 : a(i) = min(a(i-1), a(i/2), a(i/3), a(i/5))+1

2,3,5 중 나누어 떨어지는 수가 있을 때까지 1씩 빼기
나눠 떨어지는 수가 있을 시, dp테이블에 1을 뺀 값과 비교하여 최솟값으로 갱신


그리디문제와의 차이점
- 그리디는 하나의 종류만 사용 가능(하나가 무조건 더 빠른 길 ex. 나누는 연산이 훨씬 빠름)
- 매 상황마다 조건이 다양하게 존재함

"""
